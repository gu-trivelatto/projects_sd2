$date
  Tue Sep 29 10:44:40 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module std_logic_1164 $end
$upscope $end
$scope module numeric_std $end
$upscope $end
$scope module ram_tb $end
$var reg 1 ! ck3_tb $end
$var reg 1 " ck4_tb $end
$var reg 1 # wr3_tb $end
$var reg 1 $ wr4_tb $end
$var reg 4 % addr_tb_4bits[3:0] $end
$var reg 8 & datai_tb_4bits[7:0] $end
$var reg 8 ' datao_tb_4bits[7:0] $end
$var reg 3 ( addr_tb_3bits[2:0] $end
$var reg 4 ) datai_tb_3bits[3:0] $end
$var reg 4 * datao_tb_3bits[3:0] $end
$var reg 1 + kp_ck3 $end
$var reg 1 , kp_ck4 $end
$scope module dut1 $end
$var reg 1 - ck $end
$var reg 1 . wr $end
$var reg 4 / addr[3:0] $end
$var reg 8 0 data_i[7:0] $end
$var reg 8 1 data_o[7:0] $end
$comment mem is not handled $end
$upscope $end
$scope module dut2 $end
$var reg 1 2 ck $end
$var reg 1 3 wr $end
$var reg 3 4 addr[2:0] $end
$var reg 4 5 data_i[3:0] $end
$var reg 4 6 data_o[3:0] $end
$comment mem is not handled $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
0!
0"
1#
1$
b0000 %
b00000000 &
b00000000 '
b000 (
b0000 )
b0000 *
1+
1,
0-
1.
b0000 /
b00000000 0
b00000000 1
02
13
b000 4
b0000 5
b0000 6
#5000000
1!
1"
1-
12
#10000000
0!
0"
0-
02
#15000000
1!
1"
1-
12
#20000000
0!
0"
b0010 %
b11000000 &
b010 (
b1100 )
0-
b0010 /
b11000000 0
02
b010 4
b1100 5
#25000000
1!
1"
b11000000 '
b1100 *
1-
b11000000 1
12
b1100 6
#30000000
0!
0"
0-
02
#35000000
1!
1"
1-
12
#40000000
0!
0"
b0110 %
b10101010 &
b00000000 '
b011 (
b1010 )
b0000 *
0-
b0110 /
b10101010 0
b00000000 1
02
b011 4
b1010 5
b0000 6
#45000000
1!
1"
b10101010 '
b1010 *
1-
b10101010 1
12
b1010 6
#50000000
0!
0"
0-
02
#55000000
1!
1"
1-
12
#60000000
0!
0"
b1111 %
b00001111 &
b00000000 '
b111 (
b1111 )
b0000 *
0-
b1111 /
b00001111 0
b00000000 1
02
b111 4
b1111 5
b0000 6
#65000000
1!
1"
b00001111 '
b1111 *
1-
b00001111 1
12
b1111 6
#70000000
0!
0"
0-
02
#75000000
1!
1"
1-
12
#80000000
0!
0"
b1000 %
b11100000 &
b00000000 '
b100 (
b1110 )
b0000 *
0-
b1000 /
b11100000 0
b00000000 1
02
b100 4
b1110 5
b0000 6
#85000000
1!
1"
b11100000 '
b1110 *
1-
b11100000 1
12
b1110 6
#90000000
0!
0"
0-
02
#95000000
1!
1"
1-
12
#100000000
0!
0"
0#
0$
b0000 %
b00000000 '
b000 (
b0000 *
0-
0.
b0000 /
b00000000 1
02
03
b000 4
b0000 6
#101000000
#102000000
b0010 %
b11000000 '
b010 (
b1100 *
b0010 /
b11000000 1
b010 4
b1100 6
#103000000
#104000000
b0110 %
b10101010 '
b011 (
b1010 *
b0110 /
b10101010 1
b011 4
b1010 6
#105000000
1!
1"
1-
12
#106000000
b1111 %
b00001111 '
b111 (
b1111 *
b1111 /
b00001111 1
b111 4
b1111 6
#107000000
#108000000
b1000 %
b11100000 '
b100 (
b1110 *
b1000 /
b11100000 1
b100 4
b1110 6
#109000000
#110000000
0!
0"
0+
0,
0-
02
#115000000
